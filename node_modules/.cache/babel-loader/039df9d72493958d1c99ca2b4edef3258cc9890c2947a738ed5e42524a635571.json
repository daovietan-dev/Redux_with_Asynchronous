{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState: {\n    cartIsVisible: false,\n    notification: null\n  },\n  reducers: {\n    toggle: state => {\n      state.cartIsVisible = !state.cartIsVisible;\n    },\n    showNotification: (state, action) => {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message\n      };\n    }\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiSlice.actions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://redux-learn-8e504-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Somethings wrong!');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiSlice.actions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sending cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};\nexport default uiSlice;\nexport const uiActions = uiSlice.actions;","map":{"version":3,"names":["createSlice","uiSlice","name","initialState","cartIsVisible","notification","reducers","toggle","state","showNotification","action","status","payload","title","message","sendCartData","cart","dispatch","actions","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","uiActions"],"sources":["D:/Redux_with_Asynchronous/src/store/ui-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState: { cartIsVisible: false, notification: null },\r\n  reducers: {\r\n    toggle: state => {\r\n      state.cartIsVisible = !state.cartIsVisible\r\n    },\r\n    showNotification: (state, action) => {\r\n      state.notification = {\r\n        status: action.payload.status,\r\n        title: action.payload.title,\r\n        message: action.payload.message,\r\n      }\r\n    },\r\n  },\r\n})\r\n\r\nexport const sendCartData = cart => {\r\n  return async dispatch => {\r\n    dispatch(\r\n      uiSlice.actions.showNotification({\r\n        status: 'pending',\r\n        title: 'Sending...',\r\n        message: 'Sending cart data!',\r\n      })\r\n    )\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        'https://redux-learn-8e504-default-rtdb.firebaseio.com/cart.json',\r\n        {\r\n          method: 'PUT',\r\n          body: JSON.stringify(cart),\r\n        }\r\n      )\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Somethings wrong!')\r\n      }\r\n    }\r\n\r\n    try {\r\n      await sendRequest()\r\n\r\n      dispatch(\r\n        uiSlice.actions.showNotification({\r\n          status: 'success',\r\n          title: 'Success!',\r\n          message: 'Sending cart data successfully!',\r\n        })\r\n      )\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'Error!',\r\n          message: 'Sending cart data failed!',\r\n        })\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default uiSlice\r\nexport const uiActions = uiSlice.actions\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,OAAO,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,IAAI;EACVC,YAAY,EAAE;IAAEC,aAAa,EAAE,KAAK;IAAEC,YAAY,EAAE;EAAK,CAAC;EAC1DC,QAAQ,EAAE;IACRC,MAAM,EAAEC,KAAK,IAAI;MACfA,KAAK,CAACJ,aAAa,GAAG,CAACI,KAAK,CAACJ,aAAa;IAC5C,CAAC;IACDK,gBAAgB,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnCF,KAAK,CAACH,YAAY,GAAG;QACnBM,MAAM,EAAED,MAAM,CAACE,OAAO,CAACD,MAAM;QAC7BE,KAAK,EAAEH,MAAM,CAACE,OAAO,CAACC,KAAK;QAC3BC,OAAO,EAAEJ,MAAM,CAACE,OAAO,CAACE;MAC1B,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGC,IAAI,IAAI;EAClC,OAAO,MAAMC,QAAQ,IAAI;IACvBA,QAAQ,CACNhB,OAAO,CAACiB,OAAO,CAACT,gBAAgB,CAAC;MAC/BE,MAAM,EAAE,SAAS;MACjBE,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IAED,MAAMK,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAAiE,EACjE;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI;MAC3B,CACF,CAAC;MAED,IAAI,CAACI,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;MACtC;IACF,CAAC;IAED,IAAI;MACF,MAAMR,WAAW,CAAC,CAAC;MAEnBF,QAAQ,CACNhB,OAAO,CAACiB,OAAO,CAACT,gBAAgB,CAAC;QAC/BE,MAAM,EAAE,SAAS;QACjBE,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdX,QAAQ,CACNY,SAAS,CAACpB,gBAAgB,CAAC;QACzBE,MAAM,EAAE,OAAO;QACfE,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,eAAeb,OAAO;AACtB,OAAO,MAAM4B,SAAS,GAAG5B,OAAO,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}