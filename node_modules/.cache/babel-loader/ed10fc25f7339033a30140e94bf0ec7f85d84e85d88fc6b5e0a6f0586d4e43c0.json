{"ast":null,"code":"import { cartActions } from './cart-slice';\nimport { uiActions } from './ui-slice';\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://redux-learn-8e504-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error(`Could not fetch cart data!`);\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  // dispatch argument được tạo tự động, vì đây là một thiết kế của Redux giúp cho những developer có thể thực thi side-effect trong actionCreator()\n  return async dispatch => {\n    // ta thực sự đã gửi đi một action khác trong hàm trả về này\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n\n    // khai báo asynchronous code\n    const sendRequest = async () => {\n      const response = await fetch('https://redux-learn-8e504-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        // không đồng bộ state.changed vào database\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Somethings wrong!');\n      }\n    };\n\n    // thực thi asynchronous code\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sending cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["cartActions","uiActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["D:/Redux_with_Asynchronous/src/store/cart-action.js"],"sourcesContent":["import { cartActions } from './cart-slice'\r\nimport { uiActions } from './ui-slice'\r\n\r\nexport const fetchCartData = () => {\r\n  return async dispatch => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        'https://redux-learn-8e504-default-rtdb.firebaseio.com/cart.json'\r\n      )\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Could not fetch cart data!`)\r\n      }\r\n      const data = await response.json()\r\n\r\n      return data\r\n    }\r\n\r\n    try {\r\n      const cartData = await fetchData()\r\n      dispatch(cartActions.replaceCart(cartData))\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'Error!',\r\n          message: 'Sending cart data failed!',\r\n        })\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport const sendCartData = cart => {\r\n  // dispatch argument được tạo tự động, vì đây là một thiết kế của Redux giúp cho những developer có thể thực thi side-effect trong actionCreator()\r\n  return async dispatch => {\r\n    // ta thực sự đã gửi đi một action khác trong hàm trả về này\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: 'pending',\r\n        title: 'Sending...',\r\n        message: 'Sending cart data!',\r\n      })\r\n    )\r\n\r\n    // khai báo asynchronous code\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        'https://redux-learn-8e504-default-rtdb.firebaseio.com/cart.json',\r\n        {\r\n          method: 'PUT',\r\n          // không đồng bộ state.changed vào database\r\n          body: JSON.stringify(cart),\r\n        }\r\n      )\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Somethings wrong!')\r\n      }\r\n    }\r\n\r\n    // thực thi asynchronous code\r\n    try {\r\n      await sendRequest()\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'success',\r\n          title: 'Success!',\r\n          message: 'Sending cart data successfully!',\r\n        })\r\n      )\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'Error!',\r\n          message: 'Sending cart data failed!',\r\n        })\r\n      )\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAASC,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAMC,QAAQ,IAAI;IACvB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEACF,CAAC;MAED,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,4BAA2B,CAAC;MAC/C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CAACH,WAAW,CAACY,WAAW,CAACD,QAAQ,CAAC,CAAC;IAC7C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdV,QAAQ,CACNF,SAAS,CAACa,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGC,IAAI,IAAI;EAClC;EACA,OAAO,MAAMhB,QAAQ,IAAI;IACvB;IACAA,QAAQ,CACNF,SAAS,CAACa,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;;IAED;IACA,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAAiE,EACjE;QACEe,MAAM,EAAE,KAAK;QACb;QACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MAC3B,CACF,CAAC;MAED,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;MACtC;IACF,CAAC;;IAED;IACA,IAAI;MACF,MAAMY,WAAW,CAAC,CAAC;MACnBjB,QAAQ,CACNF,SAAS,CAACa,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdV,QAAQ,CACNF,SAAS,CAACa,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}